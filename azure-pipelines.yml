trigger:
  branches:
    include:
      - backend-main

variables:
  GITHUB_USERNAME: 'EmsiJoseph'
  GITHUB_REPO: 'greshamie.recordings.backend'
  TARGET_BRANCH: 'dev'

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: none

- script: |
    set -euxo pipefail

    # 1. Clone the GitHub repository
    git clone https://$GITHUB_USERNAME:$GITHUB_PAT@github.com/$GITHUB_USERNAME/$GITHUB_REPO.git
    cd $GITHUB_REPO

    # 2. Configure Git identity
    git config user.email "Mcjoseph.Agbanlog@wizard-ai.com"
    git config user.name "Azure DevOps"
    
    # Checkout to target branch ($TARGET_BRANCH)
    git checkout -b $TARGET_BRANCH origin $TARGET_BRANCH

    # 3. Store current GitHub workflows (if they exist) in stash
    if [ -d ".github" ]; then
        git stash push .github/
        WORKFLOWS_STASHED=true
    else
        WORKFLOWS_STASHED=false
    fi

    # 4. Add Azure DevOps remote
    git remote add azure https://$(System.AccessToken)@wizardcloud.visualstudio.com/Gresham%20Recordings/_git/Gresham%20Recordings

    # 5. Fetch and checkout the Azure backend-main branch
    git fetch azure backend-main
    git checkout azure/backend-main

    # 6. Create and checkout a temporary branch
    git checkout -b temp-working-branch

    # 7. Perform the subtree split
    git subtree split --prefix=backend -b backend-split

    # 8. Check if $TARGET_BRANCH branch exists and handle accordingly
    if git show-ref --verify --quiet refs/heads/$TARGET_BRANCH; then
        # Main exists - checkout and reset to backend-split
        git checkout $TARGET_BRANCH
        git reset --hard backend-split
    else
        # Dev doesn't exist - create it from backend-split
        git checkout -b $TARGET_BRANCH backend-split
    fi

    # 9. Restore GitHub workflows if they were stashed
    if [ "$WORKFLOWS_STASHED" = true ]; then
        git stash pop
        git add .github
        git commit -m "Restore GitHub workflows"
    fi

    # 10. Push to GitHub with force to ensure updates
    git push origin $TARGET_BRANCH --force

    # 11. Cleanup
    git branch -D backend-split
    git branch -D temp-working-branch
  env:
    GITHUB_PAT: $(GITHUB_PAT)