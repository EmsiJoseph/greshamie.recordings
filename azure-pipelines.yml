trigger:
  branches:
    include:
      - backend-main

variables:
  GITHUB_USERNAME: 'EmsiJoseph'
  GITHUB_REPO: 'greshamie.recordings.backend'

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: none

- script: |
    # Exit immediately on error, print each command, and treat unset variables as errors.
    set -euxo pipefail

    # 1. Clone the GitHub repository using your PAT for authentication.
    git clone https://$GITHUB_USERNAME:$GITHUB_PAT@github.com/$GITHUB_USERNAME/$GITHUB_REPO.git
    cd $GITHUB_REPO

    # 2. Configure Git identity for commit attribution.
    git config user.email "Mcjoseph.Agbanlog@wizard-ai.com"
    git config user.name "Azure DevOps"

    # 3. Add the Azure DevOps repository as a remote named "azure".
    #    The URL uses $(System.AccessToken) for authentication.
    git remote add azure https://$(System.AccessToken)@wizardcloud.visualstudio.com/Gresham%20Recordings/_git/Gresham%20Recordings

    # 4. Fetch the 'backend-main' branch from the Azure remote.
    git fetch azure backend-main

    # 5. Create a temporary branch (backend-split) that contains only the contents of the "backend" folder.
    #    This command “splits” the subtree located at 'backend' so that its contents become the root of the new branch.
    git subtree split --prefix=backend -b backend-split azure/backend-main

    # 6. Merge the subtree branch into the current branch (main) with a squash commit.
    #    This brings the contents of the "backend" folder (from the Azure repo) into the root of your GitHub repo.
    git merge --squash backend-split -m "Update backend from Azure"

    # 7. Remove the temporary branch.
    git branch -D backend-split

    # 8. Push the changes to GitHub.
    git push origin main
  env:
    GITHUB_PAT: $(GITHUB_PAT)
