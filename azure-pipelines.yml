trigger:
  branches:
    include:
      - backend-main

variables:
  GITHUB_USERNAME: 'EmsiJoseph'
  GITHUB_REPO: 'greshamie.recordings.backend'

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: none

- script: |
    set -euxo pipefail

    # 1. Clone the GitHub repository using your PAT for authentication.
    git clone https://$GITHUB_USERNAME:$GITHUB_PAT@github.com/$GITHUB_USERNAME/$GITHUB_REPO.git
    cd $GITHUB_REPO

    # 2. Configure Git identity for commit attribution.
    git config user.email "Mcjoseph.Agbanlog@wizard-ai.com"
    git config user.name "Azure DevOps"

    # 3. Add the Azure DevOps repository as a remote named "azure".
    git remote add azure https://$(System.AccessToken)@wizardcloud.visualstudio.com/Gresham%20Recordings/_git/Gresham%20Recordings

    # 4. Fetch the backend-main branch from the azure remote.
    git fetch azure backend-main

    # 5. (Optional) List directories for debugging.
    echo "Directories in azure/backend-main:"
    git ls-tree -d azure/backend-main

    # 6. Check if 'backend' directory exists.
    if git ls-tree -d azure/backend-main | grep -q "backend"; then
      echo "'backend' directory exists. Proceeding with subtree split."
    else
      echo "'backend' directory does not exist. Exiting."
      exit 1
    fi

    # 7. Get the tip commit hash of azure/backend-main.
    COMMIT_HASH=$(git rev-parse azure/backend-main)
    echo "Using tip commit for subtree split: $COMMIT_HASH"

    # 8. Create a temporary branch (backend-split) that contains only the contents of the 'backend' folder.
    git subtree split --prefix=backend -b backend-split $COMMIT_HASH

    # 9. Merge the subtree branch into the current branch (main) with a squash commit.
    git merge --squash backend-split -m "Update backend from Azure"

    # 10. Remove the temporary branch.
    git branch -D backend-split

    # 11. Push the changes to GitHub.
    git push origin main
  env:
    GITHUB_PAT: $(GITHUB_PAT)