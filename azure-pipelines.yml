trigger:
  branches:
    include:
      - backend-main

variables:
  GITHUB_USERNAME: 'EmsiJoseph'
  GITHUB_REPO: 'greshamie.recordings.backend'

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: none

- script: |
    # Exit immediately if a command exits with a non-zero status,
    # print each command, and fail if any unset variable is used.
    set -euxo pipefail

    # 1. Clone the GitHub repository using your PAT for authentication
    git clone https://$GITHUB_USERNAME:$GITHUB_PAT@github.com/$GITHUB_USERNAME/$GITHUB_REPO.git
    cd $GITHUB_REPO

    # 2. Configure Git identity for commit author info
    git config user.email "Mcjoseph.Agbanlog@wizard-ai.com"
    git config user.name "Azure DevOps"

    # 3. Add the Azure repository as a remote called "azure" and fetch the backend branch
    git remote add azure $(Build.Repository.Uri)
    git fetch azure backend-main

    # 4. Checkout the main branch of the GitHub repo
    git checkout main

    # 5. Merge changes from the Azure repo's backend-main branch into the backend/ folder
    #    using the subtree pull strategy with a squash commit.
    git subtree pull --prefix=backend azure backend-main --squash -m "Update backend from Azure"

    # 6. Push changes to GitHub (if there are any new commits)
    git push origin main
  env:
    GITHUB_PAT: $(GITHUB_PAT)
