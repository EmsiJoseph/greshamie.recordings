trigger:
  branches:
    include:
      - backend-main

variables:
  GITHUB_USERNAME: 'EmsiJoseph'
  GITHUB_REPO: 'greshamie.recordings.backend'

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: none

- script: |
    # Exit immediately if a command fails; print commands and error if any variable is not set.
    set -euxo pipefail

    # 1. Clone the GitHub repository using your PAT for authentication
    git clone https://$GITHUB_USERNAME:$GITHUB_PAT@github.com/$GITHUB_USERNAME/$GITHUB_REPO.git
    cd $GITHUB_REPO

    # 2. Configure Git identity for commit attribution
    git config user.email "Mcjoseph.Agbanlog@wizard-ai.com"
    git config user.name "Azure DevOps"

    # 3. Add the Azure DevOps repository as a remote named "azure" 
    #    Use the OAuth token (ensure "Allow scripts to access the OAuth token" is enabled)
    git remote add azure https://$(System.AccessToken)@wizardcloud.visualstudio.com/Gresham%20Recordings/_git/Gresham%20Recordings

    # 4. Fetch the 'backend-main' branch from Azure
    git fetch azure backend-main

    # 5. Checkout the main branch of the GitHub repository
    git checkout main

    # 6. Update the backend subtree: if the "backend" folder doesn't exist, add it; otherwise, pull updates.
    if [ -d "backend" ]; then
      echo "Subtree 'backend' exists, pulling updates."
      git subtree pull --prefix=backend azure backend-main --squash -m "Update backend from Azure"
    else
      echo "Subtree 'backend' does not exist, adding it."
      git subtree add --prefix=backend azure backend-main --squash -m "Add backend from Azure"
    fi

    # 7. Push any new commit(s) to GitHub
    git push origin main
  env:
    GITHUB_PAT: $(GITHUB_PAT)
