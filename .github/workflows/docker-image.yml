name: Build and Push Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_HUB_REPO_FRONTEND: mcagbanlog/gresham-recordings-frontend
  DOCKER_HUB_REPO_BACKEND: mcagbanlog/gresham-recordings-backend

jobs:
  build-and-push:
    name: Build, Tag, and Push Docker Images
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 3. Set version from GitHub ref or fallback
    - name: Set Version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "push" ]]; then
          echo "VERSION=${{ github.sha }}" >> $GITHUB_ENV
        elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "VERSION=pr-${{ github.event.pull_request.number }}" >> $GITHUB_ENV
        else
          echo "VERSION=latest" >> $GITHUB_ENV
        fi

    # 4. Build Docker Compose images
    - name: Build Docker Compose Images
      run: |
        docker compose -f docker-compose.dev.yml build
      env:
        NEXT_PUBLIC_GRESHAM_BACKEND: ${{ secrets.NEXT_PUBLIC_GRESHAM_BACKEND }}
        NEXT_PUBLIC_GRESHAM_AUTH: ${{ secrets.NEXT_PUBLIC_GRESHAM_AUTH }}
        DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
        AZURE_BLOB_CONNECTION: ${{ secrets.AZURE_BLOB_CONNECTION }}
        ALLOWED_ORIGINS: ${{ secrets.ALLOWED_ORIGINS }}
        ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
        ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
        AUTH_CLIENT_ID: ${{ secrets.AUTH_CLIENT_ID }}
        AUTH_CLIENT_SECRET: ${{ secrets.AUTH_CLIENT_SECRET }}
        AUTH_SCOPE: ${{ secrets.AUTH_SCOPE }}
        CLARIFYGO_API_BASE_URI: ${{ secrets.CLARIFYGO_API_BASE_URI }}
        CLARIFYGO_IDENTITY_URI: ${{ secrets.CLARIFYGO_IDENTITY_URI }}
        JWT_AUDIENCE: ${{ secrets.JWT_AUDIENCE }}
        JWT_EXPIRY_HOURS: ${{ secrets.JWT_EXPIRY_HOURS }}
        JWT_ISSUER: ${{ secrets.JWT_ISSUER }}
        JWT_KEY: ${{ secrets.JWT_KEY }}

    # 5. Tag images with version and latest
    - name: Tag Docker Images
      run: |
        docker tag $DOCKER_HUB_REPO_FRONTEND:latest $DOCKER_HUB_REPO_FRONTEND:${{ env.VERSION }}
        docker tag $DOCKER_HUB_REPO_BACKEND:latest $DOCKER_HUB_REPO_BACKEND:${{ env.VERSION }}

    # 6. Push images to Docker Hub
    - name: Push Docker Images
      run: |
        docker push $DOCKER_HUB_REPO_FRONTEND:latest
        docker push $DOCKER_HUB_REPO_FRONTEND:${{ env.VERSION }}
        docker push $DOCKER_HUB_REPO_BACKEND:latest
        docker push $DOCKER_HUB_REPO_BACKEND:${{ env.VERSION }}
